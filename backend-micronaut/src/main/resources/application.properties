
micronaut.application.name=backend-micronaut
micronaut.security.authentication=bearer
micronaut.security.token.jwt.signatures.secret.generator.secret=${JWT_GENERATOR_SIGNATURE_SECRET\:pleaseChangeThisSecretForANewOne}

# Server configuration
micronaut.server.port=8081

# JWT token configuration
micronaut.security.authentication=bearer
micronaut.security.token.jwt.signatures.secret.generator.secret=${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}
micronaut.security.token.jwt.generator.access-token.expiration=86400

# CORS configuration 
micronaut.server.cors.enabled=true
micronaut.server.cors.configurations.web.allowedOrigins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
micronaut.server.cors.configurations.web.allowedMethods=GET,POST,PUT,DELETE,OPTIONS
micronaut.server.cors.configurations.web.allowedHeaders=*
micronaut.server.cors.configurations.web.allowCredentials=true

# Database Configuration (H2 in-memory)
datasources.default.url=jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
datasources.default.driverClassName=org.h2.Driver
datasources.default.username=user
datasources.default.password=passwort
datasources.default.schema-generate=CREATE_DROP
datasources.default.dialect=H2

# JPA Configuration
jpa.default.properties.hibernate.hbm2ddl.auto=create-drop
jpa.default.properties.hibernate.show_sql=true

# Security Configuration
micronaut.security.token.roles-name=roles